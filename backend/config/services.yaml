# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
  app.db_in_files.root_folder: '%kernel.project_dir%/var/my-filesystem'

services:
  # default configuration for services in *this* file
  _defaults:
    autowire: true      # Automatically injects dependencies in your services.
    autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
    bind:
      $rootDir: '%app.db_in_files.root_folder%'

  _instanceof:
    App\Infrastructure\Shared\Bus\Command\CommandHandlerInterface:
      public: true
      tags:
        - { name: messenger.message_handler, bus: messenger.bus.command }

  # makes classes in src/ available to be used as services
  # this creates a service per class whose id is the fully-qualified class name
  App\:
    resource: '../src/'
    exclude:
      - '../src/Domain/User/User.php'
      - '../src/Domain/User/ValueObject/'
      - '../src/Domain/*/Exception/'
      - '../src/Application/**/*Command.php'
      - '../src/Application/**/*Response.php'
      - '../src/Infrastructure/**/Doctrine/'
      - '../src/Kernel.php'
      - '../src/Tests/'
      - '../src/Infrastructure/Shared/Migrations'

  # This service definition is commented out because the directory doesn't exist yet
  # Uncomment when the Post module is implemented
  # App\Infrastructure\Post\Doctrine\:
  #     resource: '../src/Infrastructure/Post/Doctrine/*Parser.php'

  # Domain shared services
  App\Domain\Shared\:
    resource: '../src/Domain/Shared/'
    
  # Alias the UserRepositoryInterface to a concrete implementation
  # Choose either DoctrineUserRepository or InFileUserRepository based on your preference
  App\Domain\User\Repository\UserRepositoryInterface: '@App\Infrastructure\Persistence\InFile\Repository\InFileUserRepository'

  # add more service definitions when explicit configuration is needed
  # please note that last definitions always *replace* previous ones
  # Controllers
  App\UI\Http\Web\Controller\:
    resource: '../src/UI/Http/Web/Controller/'
    tags: ['controller.service_arguments']

  App\UI\Http\Rest\Controller\:
    resource: '../src/UI/Http/Rest/Controller/'
    tags: ['controller.service_arguments']
